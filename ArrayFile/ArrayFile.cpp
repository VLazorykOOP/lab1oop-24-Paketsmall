//завдання номер 1 
// 
// #include <iostream>
// 
// 
// 
//
//int main() {
//    int N, M;
//
//    // Введення розмірів масивів A і B
//    std::cout << "Введіть розмір масиву A: ";
//    std::cin >> N;
//
//    std::cout << "Введіть розмір масиву B: ";
//    std::cin >> M;
//
//    // Введення елементів масиву A
//    int* A = new int[N];
//    std::cout << "Введіть елементи масиву A:\n";
//    for (int i = 0; i < N; ++i) {
//        std::cout << "A[" << i << "]: ";
//        std::cin >> A[i];
//    }
//
//    // Введення елементів масиву B
//    int* B = new int[M];
//    std::cout << "Введіть елементи масиву B:\n";
//    for (int i = 0; i < M; ++i) {
//        std::cout << "B[" << i << "]: ";
//        std::cin >> B[i];
//    }
//
//    // Створення масиву C розміром N + M
//    int* C = new int[N + M];
//    int cIndex = 0;
//
//    // Розміщення додатних елементів масиву A
//    for (int i = 0; i < N; ++i) {
//        if (A[i] > 0)
//            C[cIndex++] = A[i];
//    }
//
//    // Розміщення додатних елементів масиву B
//    for (int i = 0; i < M; ++i) {
//        if (B[i] > 0)
//            C[cIndex++] = B[i];
//    }
//
//    // Розміщення від'ємних елементів масиву A
//    for (int i = 0; i < N; ++i) {
//        if (A[i] < 0)
//            C[cIndex++] = A[i];
//    }
//
//    // Розміщення від'ємних елементів масиву B
//    for (int i = 0; i < M; ++i) {
//        if (B[i] < 0)
//            C[cIndex++] = B[i];
//    }
//
//    // Вивід результату
//    std::cout << "Масив C:\n";
//    for (int i = 0; i < cIndex; ++i) {
//        std::cout << "C[" << i << "]: " << C[i] << "\n";
//    }
//
//    // Звільнення динамічно виділеної пам'яті
//    delete[] A;
//    delete[] B;
//    delete[] C;
//
//    return 0;
//}

//
//завдання номер 2 
//
//#include <iostream>
//using namespace std;
//int main() {
//    const int MAX_SIZE = 100; // Максимальний розмір масиву
//
//    int A[MAX_SIZE];
//    int N;
//
//    // Введення розміру масиву
//    std::cout << "Введіть розмір масиву A: ";
//    std::cin >> N;
//
//    // Введення елементів масиву A
//    std::cout << "Введіть елементи масиву A:\n";
//    for (int i = 0; i < N; ++i) {
//        std::cout << "A[" << i << "]: ";
//        std::cin >> A[i];
//    }
//
//    int A1, B;
//
//    // Введення значень A1 та B
//    std::cout << "Введіть число A1: ";
//    std::cin >> A1;
//
//    std::cout << "Введіть число B: ";
//    std::cin >> B;
//
//    int minValue = INT_MAX; // Початкове значення мінімального елемента
//
//    // Пошук мінімального значення серед елементів, менших B,
//    // і розташованих до першого елемента, більшого A1
//    for (int i = 0; i < N; ++i) {
//        if (A[i] > A1) {
//            break; // Зупинити пошук, якщо знайдено елемент більший за A1
//        }
//
//        if (A[i] < B && A[i] < minValue) {
//            minValue = A[i];
//        }
//    }
//
//    if (minValue == INT_MAX) {
//        std::cout << "Серед елементів немає елементів, менших " << B << " і розташованих до першого елемента, більшого " << A1 << "\n";
//    }
//    else {
//        std::cout << "Мінімальне значення серед елементів, менших " << B << " і розташованих до першого елемента, більшого " << A1 << " : " << minValue << "\n";
//    }
//
//    return 0;
//}


//завдання номер 3 

#include <iostream>
#include <vector> // Підключаємо бібліотеку для використання векторів

// Функція для циклічного зсуву масиву A на k позицій
std::vector<int> cyclic_shift(std::vector<int> A, int k) {
    int n = A.size(); // Отримуємо довжину масиву A
    k = k % n; // Перевірка на випадок, якщо k більше довжини масиву

    std::vector<int> shifted_array(n); // Створюємо новий масив для зберігання результату

    // Здійснюємо зсув масиву
    for (int i = 0; i < n; ++i) {
        int shifted_index = (i + k) % n; // Обчислюємо індекс для елемента після зсуву
        shifted_array[shifted_index] = A[i]; // Присвоюємо значення елемента масиву A до зсунутого масиву
    }

    return shifted_array; // Повертаємо зсунутий масив
}

// Головна функція програми
int main() {
    std::vector<int> A = {1, 2, 3, 4, 5}; // Оголошення та ініціалізація масиву
    int k = 2; // Кількість позицій для зсуву

    std::vector<int> shifted_array = cyclic_shift(A, k); // Викликаємо функцію для циклічного зсуву

    // Виведення результатів
    std::cout << "Початковий масив:";
    for (int i = 0; i < A.size(); ++i) {
        std::cout << " " << A[i]; // Виводимо початковий масив
    }
    std::cout << std::endl;

    std::cout << "Циклічно зсунутий масив на " << k << " позицій:";
    for (int i = 0; i < shifted_array.size(); ++i) {
        std::cout << " " << shifted_array[i]; // Виводимо зсунутий масив
    }
    std::cout << std::endl;

    return 0;
}
